{"version":3,"sources":["../../src/pages/contact-list/contact-list.module.ts","../../src/pages/contact-list/contact-list.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ContactListPage } from './contact-list';\n\n@NgModule({\n  declarations: [\n    ContactListPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ContactListPage),\n  ],\n})\nexport class ContactListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact-list/contact-list.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController } from 'ionic-angular';\nimport { ToastControllerComponent } from '../../components/toast-controller/toast-controller';\nimport { LoadingControllerComponent } from '../../components/loading-controller/loading-controller';\nimport { CommonservicesProvider } from '../../providers/commonservices/commonservices';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { MyApp } from '../../app/app.component';\nimport { Contacts, Contact, ContactField, ContactName, ContactFindOptions, ContactFieldType } from '@ionic-native/contacts';\nimport { Geolocation } from '@ionic-native/geolocation';\n\n/**\n * Generated class for the ContactListPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-contact-list',\n  templateUrl: 'contact-list.html',\n})\nexport class ContactListPage {\n\n  public contactList:any;\n\n  constructor(public navparams: NavParams, public commonService: CommonservicesProvider, private formBuilder: FormBuilder,\n              private http: Http, public navCtrl: NavController, public navParams: NavParams, public mainServices: MyApp,\n              public messageCtrl: ToastControllerComponent, public loadingCtrl: LoadingControllerComponent,\n              public contacts: Contacts, private view: ViewController, private geolocation: Geolocation) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ContactListPage');\n  }\n\n  ionViewCanEnter(){\n    this.loadingCtrl.presentLoadingWindow('Please Wait');\n    let headers = new Headers(\n      {\n        'Content-Type': 'application/json',\n      });\n\n    let options = new RequestOptions({ headers: headers });\n\n    //Post method to send register data\n    this.http.post(this.commonService.api + '/' + this.commonService.getContactList + '/', {userID : localStorage.getItem('userID')}, options)\n      .subscribe((res: any) => {\n        console.log(\"res\" + res);\n        let success = JSON.parse(res._body);\n\n        switch (success.status) {\n          case 200:\n            this.loadingCtrl.dismissLoadingWindow();\n            this.messageCtrl.presentToast(success.message, \"greenClr\");\n            this.contactList = success.body;  \n            break;\n          case 401:\n            this.loadingCtrl.dismissLoadingWindow();\n            this.messageCtrl.presentToast(success.message, \"redClr\");\n            break;\n        }\n        console.log(JSON.stringify(success));\n      }\n      );\n  }\n\n  requestToMeet(userMobile){\n    this.loadingCtrl.presentLoadingWindow('Please Wait');\n    // this.geolocation.getCurrentPosition().then((location) => {\n    console.log(location);\n    var userLat =  this.mainServices.currentLatitude;\n    var userLng =  this.mainServices.currentLongitude;\n    let headers = new Headers(\n      {\n        'Content-Type': 'application/json',\n      });\n\n    let options = new RequestOptions({ headers: headers });\n\n    //Post method to send register data\n    this.http.post(this.commonService.api + '/' + this.commonService.newLatLngRequest + '/', {userMobile : userMobile, lan : userLat, long : userLng}, options)\n      .subscribe((res: any) => {\n        let success = JSON.parse(res._body);\n        console.log(\"success-->>\", success);\n        switch (success.status) {\n          case 255:\n            this.loadingCtrl.dismissLoadingWindow();\n            this.messageCtrl.presentToast(success.message, \"greenClr\");\n            // this.chechResponcefromOtherEnd(userMobile);\n            this.view.dismiss(success.body);\n            break;\n          case 444:\n            this.loadingCtrl.dismissLoadingWindow();\n            this.messageCtrl.presentToast(success.message, \"redClr\");\n            break;\n          case 401:\n            this.loadingCtrl.dismissLoadingWindow();\n            this.messageCtrl.presentToast(success.message, \"redClr\");\n            break;\n          case 200:\n            this.loadingCtrl.dismissLoadingWindow();\n            this.messageCtrl.presentToast(success.message, \"greenClr\");\n            break;\n        }\n      }\n      );\n    // });\n  }\n\n  chechResponcefromOtherEnd(userMobile){\n    this.loadingCtrl.presentLoadingWindow('Please Wait');\n    let headers = new Headers(\n      {\n        'Content-Type': 'application/json',\n      });\n\n    let options = new RequestOptions({ headers: headers });\n\n    //Post method to send register data\n    this.http.post(this.commonService.api + '/' + this.commonService.newLatLngRequest + '/', {userMobile : userMobile}, options)\n      .subscribe((res: any) => {\n        console.log(\"res\" + res);\n        let success = JSON.parse(res._body);\n\n        switch (success.status) {\n          case 200:\n            this.loadingCtrl.dismissLoadingWindow();\n            this.messageCtrl.presentToast(success.message, \"greenClr\");\n            this.chechResponcefromOtherEnd(userMobile);\n            break;\n          case 401:\n            this.loadingCtrl.dismissLoadingWindow();\n            this.messageCtrl.presentToast(success.message, \"redClr\");\n\n            break;\n        }\n      }\n      );\n  }\n\n  closeContactModal(){\n    this.view.dismiss();\n  }\n\n  makeStarContact(contactID){\n    this.loadingCtrl.presentLoadingWindow('Please Wait');\n    let headers = new Headers(\n      {\n        'Content-Type': 'application/json',\n      });\n\n    let options = new RequestOptions({ headers: headers });\n\n    //Post method to send register data\n    this.http.post(this.commonService.api + '/' + this.commonService.putContactStar + '/', {contactID : contactID, userID : localStorage.getItem('userID')}, options)\n      .subscribe((res: any) => {\n        console.log(\"res\" + res);\n        let success = JSON.parse(res._body);\n\n        switch (success.status) {\n          case 200:\n            this.contactList = success.body;  \n            this.loadingCtrl.dismissLoadingWindow();\n            this.messageCtrl.presentToast(success.message, \"greenClr\");\n            break;\n          case 401:\n            this.loadingCtrl.dismissLoadingWindow();\n            this.messageCtrl.presentToast(success.message, \"redClr\");\n\n            break;\n        }\n      }\n      );\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact-list/contact-list.ts"],"sourceRoot":""}